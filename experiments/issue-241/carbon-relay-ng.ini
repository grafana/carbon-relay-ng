## Global settings ##

# instance id's distinguish stats of multiple relays.
# do not run multiple relays with the same instance id.
# supported variables:
#  ${HOST} : hostname
instance = "${HOST}"

## System ##
# this setting can be used to override the default GOMAXPROCS logic
# it is ignored if the GOMAXPROCS environment variable is set
max_procs = 1
pid_file = "./carbon-relay-ng.pid"
# directory for spool files
spool_dir = "spool"

## Logging ##
# one of trace debug info warn error fatal panic
# see docs/logging.md for level descriptions
# note: if you used to use `notice`, you should now use `info`.
log_level = "info"

## Admin ##
admin_addr = "0.0.0.0:2004"
http_addr = "0.0.0.0:8081"

## Inputs ##
### plaintext Carbon ###
listen_addr = "0.0.0.0:2002"
# close inbound plaintext connections if they've been idle for this long ("0s" to disable)
plain_read_timeout = "2m"
### Pickle Carbon ###
pickle_addr = "0.0.0.0:2013"
# close inbound pickle connections if they've been idle for this long ("0s" to disable)
pickle_read_timeout = "2m"

## Validation of inputs ##
# Metric name validation strictness for legacy metrics. Valid values are:
# strict - Block anything that can upset graphite: valid characters are [A-Za-z0-9_-.]; consecutive dots are not allowed
# medium - Valid characters are ASCII; no embedded NULLs
# none   - No validation is performed
validation_level_legacy = "medium"
# Metric validation for carbon2.0 (metrics2.0) metrics.
# Metrics that contain = or _is_ are assumed carbon2.0.
# Valid values are:
# medium - checks for unit and mtype tag, presence of another tag, and constency (use = or _is_, not both)
# none   - No validation is performed
validation_level_m20 = "medium"

# you can also validate that each series has increasing timestamps
validate_order = false

# How long to keep track of invalid metrics seen
# Useful time units are "s", "m", "h"
bad_metrics_max_age = "24h"

# Blocklist
# See https://github.com/grafana/carbon-relay-ng/blob/main/docs/config.md#Blocklist

blocklist = [
]

### AMQP ###
[amqp]
amqp_enabled = false
amqp_host = "localhost"
amqp_port = 5672
amqp_user = "guest"
amqp_password = "guest"
amqp_vhost = "/graphite"
amqp_exchange = "metrics"
amqp_queue = ""
amqp_key = "#"
amqp_durable = false
amqp_exclusive = true

# Aggregators
# See https://github.com/grafana/carbon-relay-ng/blob/main/docs/config.md#Aggregators

# Rewriters
# See https://github.com/grafana/carbon-relay-ng/blob/main/docs/config.md#Rewriters

#[[rewriter]]
#old = '/(.*)/'
#new = '$1foo'
#not = ''
#max = -1

# Routes
# See https://github.com/grafana/carbon-relay-ng/blob/main/docs/config.md#Routes

[init]
# init commands (DEPRECATED)
# see https://github.com/grafana/carbon-relay-ng/blob/main/docs/config.md#Imperatives
cmds = [
'addAgg count regex=s(.*)\..* s$1.count.1 10 20 cache=true',
'addAgg count regex=so(.*)\..* so$1.count.2 10 20 cache=true',
'addAgg count regex=som(.*)\..* som$1.count.3 10 20 cache=true',
'addAgg count regex=some(.*)\..* some$1.count.4 10 20 cache=true',
'addAgg count regex=some.(.*)\..* some.$1.count.5 10 20 cache=true',
'addAgg count regex=some.i(.*)\..* some.i$1.count.6 10 20 cache=true',
'addAgg count regex=some.id(.*)\..* some.id$1.count.7 10 20 cache=true',
'addAgg count regex=some.id.(.*)\..* some.id.$1.count.8 10 20 cache=true',
'addAgg count regex=some.id.o(.*)\..* some.id.o$1.count.9 10 20 cache=true',
'addAgg count regex=some.id.of(.*)\..* some.id.of$1.count.10 10 20 cache=true',
'addAgg count regex=some.id.of.(.*)\..* some.id.of.$1.count.11 10 20 cache=true',
'addAgg count regex=some.id.of.a(.*)\..* some.id.of.a$1.count.12 10 20 cache=true',
'addAgg count regex=some.id.of.a.(.*)\..* some.id.of.a.$1.count.13 10 20 cache=true',
'addAgg count regex=some.id.of.a.m(.*)\..* some.id.of.a.m$1.count.14 10 20 cache=true',
'addAgg count regex=some.id.of.a.me(.*)\..* some.id.of.a.me$1.count.15 10 20 cache=true',
'addAgg count regex=(.*s.*.*o.*a.*m.*)[1-9]*.* $1.count.16 10 20 cache=true',
'addAgg count regex=(.*s.*.*o.*a.*m.*)[1-9]*.* $1.count.17 10 20 cache=true',
'addAgg count regex=(.*o.*.*o.*a.*m.*)[1-9]*.* $1.count.18 10 20 cache=true',
'addAgg count regex=(.*m.*.*o.*a.*m.*)[1-9]*.* $1.count.19 10 20 cache=true',
'addAgg count regex=(.*e.*.*o.*a.*m.*)[1-9]*.* $1.count.20 10 20 cache=true',
'addAgg count regex=(.*[1-9])*.* count-global.$1 10 20 cache=true',
'addRoute sendAllMatch carbon-default  localhost:2003 spool=false pickle=false'
]

## Instrumentation ##

[instrumentation]
# in addition to serving internal metrics via expvar, you can send them to graphite/carbon
# IMPORTANT: setting this to "" will disable flushing, and metrics will pile up and lead to OOM
# see https://github.com/grafana/carbon-relay-ng/issues/50
# so for now you MUST send them somewhere. sorry.
# (Also, the interval here must correspond to your setting in storage-schemas.conf if you use grafana hosted metrics)
graphite_addr = "localhost:2003"
graphite_interval = 1000  # in ms
