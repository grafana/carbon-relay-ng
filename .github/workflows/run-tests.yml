name: Github Actions Tests

on:
  workflow_call:
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: Container image tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # 3.4.0
      - name: Extract golang build version
        id: extract-golang-build-version
        run: |
          set -euo pipefail

          echo "Pulling yq docker image"
          docker pull --quiet mikefarah/yq
          echo "Done"

          echo -n "Detecting circle golang build image used in upstream..."
          CIRCLECI_GOLANG_BUILD_IMAGE=$(
            docker run \
              -v "${PWD}/.circleci/:/circleci" \
              mikefarah/yq \
              '.jobs.build.docker[] | select(.image | test("^circleci/golang:")) | .image' \
              /circleci/config.yml
          )
          echo "$CIRCLECI_GOLANG_BUILD_IMAGE"

          echo -n "Extracting golang version..."
          GOLANG_VERSION=$(echo "$CIRCLECI_GOLANG_BUILD_IMAGE" | cut -f 2 -d ":")
          echo "$GOLANG_VERSION"

          echo "go-version=${GOLANG_VERSION}" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # 4.0.0
        with:
          go-version: ${{ steps.extract-golang-build-version.outputs.go-version }}
      - name: build-carbon-relay-ng
        run: |
          set -euo pipefail

          go get github.com/shuLhan/go-bindata/cmd/go-bindata
          make build-linux
      - name: run-tests
        working-directory: ./govuk-tests
        run: |
          set -euo pipefail

          ./run-tests.sh
